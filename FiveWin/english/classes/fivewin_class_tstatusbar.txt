====== Class TStatusBar ======

Win32 common controls StatusBar                                                

Inherits from [[fivewin_class_tcontrol|Class TControl]]
====== DATA ======
^Data   ^ Description                  ^
|cMsgDef|The default status bar message|
|oTimer|The timer used for the clock|
|nPartTime|The number of parts|

====== METHODS ======
^Method   ^ Description                  ^
|New|Constructor from source code|
|CheckTimer|Activates the timer if it is not already active|
|ClockOn|Activates the clock|
|Display|Displays the control|
|EraseBkGnd|Erase the background of the control|
|GetParts|Returns the number of parts|
|Paint|Paints the control|
|SetMsg|Sets the statusbar message|
|SetParts|Sets the number of parts and the coordinate of the right edge of each part.|
|SetPartText|Sets the text in the specified part.|
|SetPrompts|Sets the specified texts.|


====== Example ======
<code clipper>
#include "FiveWin.ch"

function Main()

   local oWnd, oStatusBar

   DEFINE WINDOW oWnd TITLE "Testing Win32 StatusBar" ;
      MENU BuildMenu()

   @ 2, 2 BUTTON "Set Part Text" SIZE 100, 20 ;
      ACTION oStatusBar:SetPartText( 2, "Works!" )

   @ 5, 2 BUTTON "Clock On" SIZE 100, 20 ;
      ACTION oStatusBar:ClockOn()

   DEFINE STATUSBAR oStatusBar PROMPT "  Win32 StatusBar" OF oWnd ;
      SIZES 150, 200, 240 ;
      PROMPTS "One", "Two", "Three"

   ACTIVATE WINDOW oWnd

return nil

function BuildMenu()

   local oMenu
   
   MENU oMenu
      MENUITEM "&One" MESSAGE "One"
      MENU
         MENUITEM "First"  MESSAGE "First"
         MENUITEM "Second" MESSAGE "Second"
      ENDMENU
      
      MENUITEM "&Two" MESSAGE "Two"
      MENUITEM "T&hree" MESSAGE "Three"
   ENDMENU
   
return oMenu   
</code>

{{:statusbar.jpg|:statusbar.jpg}}

====== See Also ======
[[fivewin_commands_statusbar|Commands STATUSBAR]]

====== Source code ======
FWH\SOURCE\CLASSES\TSTATUSBAR.PRG
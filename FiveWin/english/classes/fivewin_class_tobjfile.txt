
====== Class TObjFile ======

Provides OBJ file manipulation                                                 
Inherits from Tfile                                                            
OBJ files generated by any compiler are a database of variable length          
records. TObjFile Class lets you read and write OBJ files, thus giving         
you a chance to get a better understanding in compilers development.           
====== DATA ======
^ Data ^ Description      ^
|nRecId|Record Identifier.|
|nRecLen|Record Length.|
====== METHODS ======
^ Method ^ Description      ^
|New|Constructor from source code.|
|Compiler|Writes the compiler name into the OBJ|
|ExtDef|Writes a External definition record inside the OBJ|
|GrpDef|Writes a Group definition record inside the OBJ|
|LeData|Writes a Data block record inside the OBJ|
|LNames|Writes the list of the local names of the OBJ|
|ModEnd|Writes the end of file record of the OBJ|
|PubDef|Writes a Public definition record inside the OBJ|
|SegDef|Writes a segment definition record inside the OBJ|
|SkipRec|Go to next record inside the OBJ|
|THeadr|Writes the header record of the OBJ|
====== Example ======
\Fwh\Samples\TestObj.Prg
<code clipper>
// FiveWin - OBJ files manipulation sample
// TObjFile Class inherits from TFile Class.

// An OBJ file is a 'database' of small records of variable length.
// Lets see how we can generate our own OBJ files. This is part of
// the foundation of building a compiler !!!

#include "FiveWin.ch"

#define PUSH_BP     Chr(85)             // 0x55
#define MOV_BP_SP   Chr(137) + Chr(229) // 0x89, 0xE5
#define POP_BP      Chr(93)             // 0x5D
#define RETF        Chr(203)            // 0xCB

//----------------------------------------------------------------------------//

function Main()

   local oObjFile := TObjFile():Create( "Test.obj" )

   // This is always the first record inside an OBJ file
   // Lets use 'FiveWin.c' as the name of the new module
   oObjFile:THeadr( "FiveWin.c" )

   // Lets place a 'Compiler Name' comment
   oObjFile:Compiler( "(c) FiveTech Compiler 1993-2050" )

   // LNames() places a record with all the local names
   // used inside the OBJ. Lets simulate a C language local names record!

   oObjFile:LNames( { "CODE_TXT", "CODE", "_DATA", "DATA", "_BSS", "BSS",;
                      "DGROUP" } )

   // Now we define a 'segment' using the local name 1 "CODE_TEXT" in
   // our sample, and with a class specified by local name 2 "CODE" in
   // our sample. The segment will have a total length of 5 bytes !!!
   // the fourth parameter 1, means the 'alignement': 1 Bytes, 2 Words
   // and 3 in paragraphs (16 bytes)
   oObjFile:SegDef( 1, 2, 5, 1 )  // "CODE_TEXT","CODE",5 Bytes,Align in bytes

   // Lets declare a 'DATA' segment!
   oObjFile:SegDef( 3, 4, 0, 2 )  // "_DATA", "DATA", 0 bytes, Align in word

   // Lets declare a 'DATA' segment for 'statics' variables!
   oObjFile:SegDef( 5, 6, 0, 2 )  // "_BSS", "BSS", 0 bytes, Align in word

   // Lets group some segments in a traditional way
   oObjFile:GrpDef( 7, { 1, 2 } ) // "DGROUP" { "_DATA", "_BSS" }

   // Lets place some external references, which are external
   // symbols that we will use from our OBJ file
   // oObjFile:ExtDef( { "MSGINFO", "MESYESNO" } )

   // Lets place now a 'public' symbol - i.e. the name of a function!
   // 1 it is its segment from the segments we have previously
   // defined and 0 is the offset of this symbol inside that segment
   oObjFile:PubDef( "FUNCNAME", 1, 0 )

   // We place now the 'data' for the source code. 1 means it belongs
   // to CODE_TEXT segment, and 0 is its offset inside that segment
   oObjFile:LeData( PUSH_BP + ;
                    MOV_BP_SP + ;
                    POP_BP + ;
                    RETF, 1, 0 )

   // This is always the last record inside an OBJ file
   oObjFile:ModEnd()

   // We close the file
   oObjFile:End()

   MsgInfo( "Done! We have created Test.obj" )

return nil

//----------------------------------------------------------------------------//
</code>
====== See Also ======

====== Source code ======
FWH\SOURCE\CLASSES\TOBJFILE.PRG
====== FindExecutable() ======
Finds the executable filename associated with a file.

====== Syntax ======
FindExecutable( <cFile>, <cDir>, <@cResult> ) --> nResult 

====== Parameters ======
^Parameter^Description^
|<cFile>|File to search| 
|<cDir>|Default directory| 
|<@cResult>|Result of the search| 

====== Returns ======
^Returns^Description^
|nResult| Returns a value > 32, if the function is successful. If the value is <= 32, means there was an error. The possible return value an its meaning are given below.|

**Error code returned by the function FindExecutable()**

^Error Code^Meaning^
|0| System was out of memory, executable file was corrupt, or the location was invalid.|   
|2| File was not found.|
|3| Path was not found. |
|5| Attempt was made to dynamically link to a task, or there was a sharing or network-protection error.|
|6| Library required separate data segments for each task.|
|8| There was insufficient memory to start the application.|
|10| Windows version was incorrect.|
|11| Executable file was invalid. Either it was not a Windows application or there was an error in the .EXE image.|
|12| Application was designed for a different operating system.|
|13| Application was designed for MS-DOS 4.0.|
|14| Type of executable file was unknown.|
|15| Attempt was made to load a real-mode application (developed for an earlier version of Windows).|
|16| Attempt was made to load a second instance of an executable file containing multiple data segments that were not marked read-only.|
|19| Attempt was made to load a compressed executable file. The file must be decompressed before it can be loaded.|
|20| Dynamic-link library (DLL) file was invalid. One of the DLLs required to run this application was corrupt.|   
|21| Application requires Microsoft Windows 32-bit extensions. |

====== Example ======

====== Source Code ======
SOURCE\WINAPI\SHELL.C 
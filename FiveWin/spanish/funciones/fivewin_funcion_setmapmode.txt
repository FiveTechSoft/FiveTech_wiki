SetMapMode()



SetMapMode()

 Previous  Top  Next




Selects a drawing mode



====== Sintaxis ======





 SetMapMode( <hDC>, <nMode> ) --> nOldMode 


 


 



====== Parámetros ======





 <hDC> Identifies the device context. 


 


 


 


 <nMode> Specifies the new mapping mode. 


 


 





 This parameter can be any one of the following values: 


 


 



Value         Meaning    
MM_ANISOTROPIC   Logical units are converted to arbitrary units with
arbitrarily scaled axes. Setting the mapping mode to MM_ANISOTROPIC does
not change the current window or viewport settings. To change the units,
orientation, and scaling, an application should use the SetWindowExt and
SetViewportExt functions.
MM_HIENGLISH   Each logical unit is converted to 0.001 inch. Positive x
is to the right; positive y is up.    
MM_HIMETRIC      Each logical unit is converted to 0.01 millimeter.
Positive x is to the right; positive y is up.    
MM_ISOTROPIC   Logical units are converted to arbitrary units with
equally scaled axes; that is, one unit along the x-axis is equal to one
unit along the y-axis. The SetWindowExt and SetViewportExt functions must
be used to specify the desired units and the orientation of the axes. GDI
makes adjustments as necessary to ensure that the x and y units remain
the same size.
MM_LOENGLISH   Each logical unit is converted to 0.01 inch. Positive x is
to the right; positive y is up.    
MM_LOMETRIC   Each logical unit is converted to 0.1 millimeter. Positive
x is to the right; positive y is up.    
MM_TEXT      Each logical unit is converted to one device pixel. Positive
x is to the right; positive y is down.    
MM_TWIPS      Each logical unit is converted to 1/20 of a point. (Because
a point is 1/72 inch, a twip is 1/1440 inch). Positive x is to the right;
positive y is up.   

====== Devuelve ======





 <nOldMode> The previous mapping mode if the function is successful. 


 


 



Observations:





 The MM_TEXT mode allows applications to work in device pixels, where one
unit is equal to one pixel. The physical size of a pixel varies from
device to device. 


 


 





 The MM_HIENGLISH, MM_HIMETRIC, MM_LOENGLISH, MM_LOMETRIC, and MM_TWIPS
modes are useful for applications that must draw in physically meaningful
units (such as inches or millimeters). 


 


 


 


 The MM_ISOTROPIC mode ensures a 1:1 aspect ratio, which is useful when
it is important to preserve the exact shape of an image. 


 


 


 


 The MM_ANISOTROPIC mode allows the x- and y-coordinates to be adjusted
independently. 


 


 



====== Código fuente ======





 SOURCE\WINAPI\SetMapMo.c 


 


 



See also:





 GetMapMode() SetViewPortExt() SetWndExt() 


 


 







====== Ver también ======
